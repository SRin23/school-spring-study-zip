<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	                    http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/context
	                    http://www.springframework.org/schema/context/spring-context.xsd
	                    http://www.springframework.org/schema/aop
	                    http://www.springframework.org/schema/aop/spring-aop.xsd">


<bean id="t1" class="kr.hs.study.beans.TestBean1"/>
<bean id="t2" class="kr.hs.study.beans.TestBean2"/>
<bean id="t3" class="kr.hs.study.beans.TestBean3"/>
<bean id="advice" class="kr.hs.study.advice.AdvisorClass"/>

<aop:config>
	<aop:aspect ref="advice">
		<!-- 리턴타입이 없고, kr.hs.study.beans.TestBean1 클래스, method1메서드, 매개변수 없음 -->
		<!-- <aop:pointcut expression="execution(void kr.hs.study.beans.TestBean1.method1())" id="point"/> -->
		
		<!-- 리턴타입이 없고, kr.hs.study.beans.TestBean1 클래스, method1메서드, 정수형 매개변수 하나 --> 
		<!-- <aop:pointcut expression="execution(void kr.hs.study.beans.TestBean1.method1(int))" id="point"/> -->
		
		<!-- 리턴타입이 없고, kr.hs.study.beans.TestBean1 클래스, method1메서드, 문자열 매개변수 하나 --> 
		<!-- <aop:pointcut expression="execution(void kr.hs.study.beans.TestBean1.method1(String))" id="point"/> -->
		
		<!-- 리턴타입이 없고, kr.hs.study.beans.TestBean1 클래스, method1메서드, 모든형식의 매개변수 하나 --> 
		<!-- <aop:pointcut expression="execution(void kr.hs.study.beans.TestBean1.method1(*))" id="point"/>	매개변수 하나인 method1()에는 모두 적용 -->
		
		<!-- 리턴타입이 없고, kr.hs.study.beans.TestBean1 클래스, method1메서드, 정수형 매개변수 2개 --> 
		<!-- <aop:pointcut expression="execution(void kr.hs.study.beans.TestBean1.method1(int, int))" id="point"/> -->
		
		<!-- 리턴타입이 없고, kr.hs.study.beans.TestBean1 클래스, method1메서드, 정수형 1개, 문자열 1개 매개변수 --> 
		<!-- <aop:pointcut expression="execution(void kr.hs.study.beans.TestBean1.method1(int, String))" id="point"/> -->
		
		<!-- 리턴타입이 없고, kr.hs.study.beans.TestBean1 클래스, method1메서드, 모든 타입의 매개변수 2개 --> 
		<!-- <aop:pointcut expression="execution(void kr.hs.study.beans.TestBean1.method1(*, *))" id="point"/> -->
		
		<!-- 리턴타입이 없고, kr.hs.study.beans.TestBean1 클래스, method1메서드, 모든 타입의 매개변수 0개 이상 --> 
		<!-- <aop:pointcut expression="execution(void kr.hs.study.beans.TestBean1.method1(..))" id="point"/> -->
		
		<!-- 리턴타입이 없고, kr.hs.study.beans.TestBean1 클래스, 모든메서드--> 
		<!-- <aop:pointcut expression="execution(void kr.hs.study.beans.TestBean1.*(..))" id="point"/> -->
		
		<!-- 리턴타입이 없고, kr.hs.study.beans패키지의 모든 클래스, method1()--> 
		<!-- <aop:pointcut expression="execution(void kr.hs.study.beans.*.method1())" id="point"/> -->
		
		<!-- 리턴타입이 없고, kr.hs.study.beans패키지의 모든 클래스, 모든 메서드--> 
		<!-- <aop:pointcut expression="execution(void kr.hs.study.beans.*.*(..))" id="point"/> -->
		
		<!-- 리턴타입이 없고, (모든 패키지의 모든 클래스), 모든 메서드--> 
		<!-- <aop:pointcut expression="execution(void *.*(..))" id="point"/> -->
		
		<!-- 리턴타입 int, (모든 패키지의 모든 클래스), 모든 메서드--> 
		<aop:pointcut expression="execution(int *.*(..))" id="point"/>
		
		<!-- 모든 리턴타입, (모든 패키지의 모든 클래스), 모든 메서드--> 
		<aop:pointcut expression="execution(* *.*(..))" id="point"/>
		
		<!-- 모든 리턴타입, (모든 패키지의 모든 클래스), method로 시작하는 모든 메서드--> 
		<aop:pointcut expression="execution(* *.method*(..))" id="point"/>
		
		<!-- 모든 리턴타입, (모든 패키지의 모든 클래스), method로 끝나는 모든 메서드--> 
		<aop:pointcut expression="execution(* *.*method(..))" id="point"/>
		
		<aop:before method="beforeMethod" pointcut-ref="point"/>
	</aop:aspect>
</aop:config>
</beans> 